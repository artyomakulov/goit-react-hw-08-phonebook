{"version":3,"file":"static/js/304.366e0b44.chunk.js","mappings":"gOACA,EAA8B,0BAA9B,EAAgE,oB,mBCkFhE,MAzEA,WACE,OAAqBA,EAAAA,EAAAA,MAAdC,GAAP,eACA,GAAgCC,EAAAA,EAAAA,MAAxBC,KAAMC,OAAd,MAAyB,GAAzB,EACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAqBMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACL,SAATP,EAAkBC,EAAQM,GAASJ,EAAUI,EAC9C,EAEKC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMM,SA9Ba,SAAAJ,IACnBA,EAAEK,iBACiBZ,EAChBa,KAAI,SAAAC,GAAW,OAAIA,EAAYZ,KAAKa,aAArB,IACfC,SAASd,EAAKa,gBAEfE,MAAM,GAAD,OAAIf,EAAJ,4BAOLL,EAJmB,CACjBK,KAAAA,EACAE,OAAAA,IAGFM,IAEFQ,EAAAA,GAAAA,QAAc,oCACf,EAa+BC,UAAWC,EAAzC,WACE,oCACO,KACL,kBACEC,KAAK,OACLnB,KAAK,OACLO,MAAOP,EACPoB,SAAUhB,EACViB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRN,UAAWC,QAGf,sCACS,KACP,kBACEC,KAAK,MACLnB,KAAK,SACLO,MAAOL,EACPkB,SAAUhB,EACViB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRN,UAAWC,QAGf,SAACM,EAAA,EAAD,CACAC,QAAQ,YACRN,KAAK,SAASO,SAAmB,KAAT1B,GAA0B,KAAXE,EAFvC,2BAQL,EChFD,EAA0B,qB,oBCGX,SAASyB,IACtB,IAAMC,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAV,IAC1BG,GAAWC,EAAAA,EAAAA,MAKjB,OACE,8BACE,6CACA,kBAAOZ,SAPU,SAAAf,GACnB0B,GAASE,EAAAA,EAAAA,GAAU5B,EAAEC,cAAcC,OACpC,EAKkCY,KAAK,OAAOnB,KAAK,SAASO,MAAOqB,MAGrE,CChBD,MAA8B,8BAA9B,EAA+E,mCAA/E,EAAoI,kCCWrH,SAASM,IACtB,OAAgCtC,EAAAA,EAAAA,MAAxBC,KAAMC,OAAd,MAAyB,GAAzB,EAEAqC,QAAQC,IAAI,WAAYtC,GAExB,OAAeuC,EAAAA,EAAAA,MAARC,GAAP,eAEMV,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAV,IAS1BW,EAPqB,WACzB,IAAMC,EAAmBZ,EAAOf,cAChC,OAAOf,EAAS8B,QAAO,SAAAa,GAAO,OAC5BA,EAAQzC,KAAKa,cAAcC,SAAS0B,EADR,GAG/B,CAEuBE,GACxB,OACE,+BACE,eAAIzB,UAAWC,EAAf,SACGqB,EAAgB5B,KAAI,YAA2B,IAAxBgC,EAAuB,EAAvBA,GAAI3C,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OAChC,OACE,gBAAIe,UAAWC,EAAf,WACE,yBACGlB,EADH,KACWE,MAEX,SAACsB,EAAA,EAAD,CACEC,QAAQ,YACRR,UAAWC,EACX0B,QAAS,kBAAmBN,EAAKK,GA/BtB3B,EAAAA,GAAAA,MAAY,qCA+Bd,EACTG,KAAK,SAJP,sBAJwCwB,EAc7C,OAIR,CChCD,MAfA,WACE,OACE,iBAAK1B,UAAWC,EAAhB,WACE,4BACE,uCACA,SAAC,EAAD,QAEF,4BACE,SAACS,EAAD,KACA,SAACO,EAAD,SAIP,C","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/App.module.css?6c4d","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formSection\":\"Form_formSection__tiVog\",\"input\":\"Form_input__FTtTw\"};","import React, { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport css from './Form.module.css';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsApi';\n\n\nfunction Form() {\n  const [addContact] = useAddContactMutation();\n  const { data: contacts = [] } = useFetchContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchName = contacts\n      .map(contactName => contactName.name.toLowerCase())\n      .includes(name.toLowerCase());\n    if (searchName) {\n      alert(`${name} is already in contact`);\n      return;\n    } else {\n      const newContact = {\n        name,\n        number,\n      };\n      addContact(newContact);\n      reset();\n    }\n    toast.success('Сontact added successfully!')\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.formSection}>\n      <label>\n        Name{' '}\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={css.input}\n        />\n      </label>\n      <label>\n        Number{' '}\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <Button \n      variant=\"contained\"\n      type=\"submit\" disabled={name === '' || number === ''}>\n        Add contact\n      </Button>\n    </form>\n    \n  );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"App_section__a1Jg4\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/slice';\n\nexport default function Filter() {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <label>\n      <h3>Filter by name </h3>\n      <input onChange={changeFilter} type=\"text\" name=\"filter\" value={filter}/>\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"Contacts_ContactList__tFy-k\",\"ContactList_item\":\"Contacts_ContactList_item__PAPEU\",\"ContactList_btn\":\"Contacts_ContactList_btn__8xo+S\"};","import React from 'react';\nimport toast from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport css from './Contacts.module.css';\nimport { useSelector } from 'react-redux';\nimport {\n  useDeleteContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/contactsApi';\n\nconst notifyDelete = () => toast.error('Сontact deleted successfully!');\n\nexport default function ContactList() {\n  const { data: contacts = [] } = useFetchContactsQuery();\n\n  console.log('contacts', contacts);\n\n  const [func] = useDeleteContactMutation();\n\n  const filter = useSelector(state => state.filter);\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n  return (\n    <>\n      <ol className={css.ContactList}>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <li className={css.ContactList_item} key={id}>\n              <p>\n                {name}: {number}\n              </p>\n              <Button\n                variant=\"contained\"\n                className={css.ContactList_btn}\n                onClick={() => notifyDelete(func(id))}\n                type=\"button\"\n              >\n                Delete\n              </Button>\n            </li>\n          );\n        })}\n      </ol>\n    </>\n  );\n}\n","import Form from 'components/Form/Form';\nimport css from '../components/App.module.css';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/Contacts/Contacts';\n\nfunction ContactsForm() {\n  return (\n    <div className={css.section}>\n      <div>\n        <h1>Phonebook</h1>\n        <Form />\n      </div>\n      <div>\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsForm;\n"],"names":["useAddContactMutation","addContact","useFetchContactsQuery","data","contacts","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","map","contactName","toLowerCase","includes","alert","toast","className","css","type","onChange","pattern","title","required","Button","variant","disabled","Filter","filter","useSelector","state","dispatch","useDispatch","setFilter","ContactList","console","log","useDeleteContactMutation","func","visibleContacts","normalizedFilter","contact","getVisibleContacts","id","onClick"],"sourceRoot":""}